# https://circleci.com/docs/2.0/configuration-reference/
# https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
version: 2.1

# Framework compiled with Swift 5.2 seems incompatible to Swift 5.1 compiler:
# results in "error: unknown attribute '_hasMissingDesignatedInitializers'"; see also:
# https://forums.swift.org/t/cant-use-framework-compiled-with-swift-5-2-in-swift-5-1-3-project/35248

# Swift versions used in ObjectBox releases:
# 1.4.1: 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
# 1.4.0: 5.2.4

.cocoapods: &steps_cocoapods
  steps:
    - checkout
    - run:
        name: Update CocoaPods
        command: sudo gem install cocoapods
    - run:
        name: Test CocoaPods latest
        command: ./test.sh --clean
    - run:
        name: Test CocoaPods latest explicit version
        command: ./test.sh --clean -v "1.4.1"
    - run:
        name: Test CocoaPods latest beta version
        command: ./test.sh --clean -v "1.5.0-beta1" --staging
    - run:
        name: Test CocoaPods latest sync version
        command: ./test.sh --clean -v "1.5.0-sync-rc5" --staging
    - run:
        command: |
          mkdir -p /tmp/test-results
          find . -name *.xcresult -exec cp -r {} /tmp/test-results \;
        when: on_fail
    - store_artifacts:
        path: /tmp/test-results

.carthage: &steps_carthage
  steps:
    - checkout
    - run:
        name: Update Carthage
        command: brew update && brew upgrade carthage
    - run:
        name: Test Carthage latest
        command: ./test.sh --clean --carthage
    - run:
        name: Test Carthage latest explicit version
        command: ./test.sh --clean --carthage -v 1.4.1
    - run:
        command: |
          mkdir -p /tmp/test-results
          find . -name *.xcresult -exec cp -r {} /tmp/test-results \;
        when: on_fail
    - store_artifacts:
        path: /tmp/test-results

# To test release candidates via staging repo:
# https://github.com/objectbox/objectbox-swift-spec-staging/blob/master/cartspec/ObjectBox.json
.carthage_staging: &steps_carthage_staging
  steps:
    - checkout
    - run:
        name: Update Carthage
        command: brew update && brew upgrade carthage
    - run:
        name: Test Carthage staging version
        command: ./test.sh --staging --carthage -v 1.4.1
    - run:
        command: |
          mkdir -p /tmp/test-results
          find . -name *.xcresult -exec cp -r {} /tmp/test-results \;
        when: on_fail
    - store_artifacts:
        path: /tmp/test-results

# Swift 5.3 was introduced in Xcode 12.0
# Swift 5.2 was introduced in Xcode 11.4

jobs:
  xcode-12_4_0-macos-10_15:
    macos: {xcode: "12.4.0"} # Swift 5.3
    <<: *steps_cocoapods

  xcode-12_3_0-macos-10_15:
    macos: {xcode: "12.3.0"} # Swift 5.3
    <<: *steps_cocoapods

  xcode-12_2_0-macos-10_15:
    macos: {xcode: "12.2.0"} # Swift 5.3
    <<: *steps_cocoapods

  xcode-12_1_1-macos-10_15:
    macos: {xcode: "12.1.1"} # Swift 5.3
    <<: *steps_cocoapods

  xcode-12_1_1-macos-10_15_cart:
    macos: {xcode: "12.1.1"} # Swift 5.3
    <<: *steps_carthage

  xcode-12_0_1-macos-10_15:
    macos: {xcode: "12.0.1"} # Swift 5.3
    <<: *steps_cocoapods

  xcode-12_0_1-macos-10_15_cart:
    macos: {xcode: "12.0.1"} # Swift 5.3
    <<: *steps_carthage

  xcode-11_7_0-macos-10_15:
    macos: {xcode: "11.7.0"} # Swift 5.2.4
    <<: *steps_cocoapods

  xcode-11_6_0-macos-10_15:
    macos: {xcode: "11.6.0"} # Swift 5.2.4
    <<: *steps_cocoapods

  xcode-11_5_0-macos-10_15:
    macos: {xcode: "11.5.0"} # Swift 5.2.4
    <<: *steps_cocoapods

  xcode-11_4_1-macos-10_15:
    macos: {xcode: "11.4.1"} # Swift 5.2.2
    <<: *steps_cocoapods

  xcode-11_4_0-macos-10_15:
    macos: {xcode: "11.4.0"} # Swift 5.2.2
    <<: *steps_cocoapods

workflows:
  build:
    jobs:
      - xcode-12_4_0-macos-10_15
      - xcode-12_3_0-macos-10_15
      - xcode-12_2_0-macos-10_15
      - xcode-12_1_1-macos-10_15
      - xcode-12_1_1-macos-10_15_cart
      - xcode-12_0_1-macos-10_15
      - xcode-12_0_1-macos-10_15_cart
      - xcode-11_7_0-macos-10_15
      - xcode-11_6_0-macos-10_15
      - xcode-11_5_0-macos-10_15
      - xcode-11_4_1-macos-10_15
      - xcode-11_4_0-macos-10_15
