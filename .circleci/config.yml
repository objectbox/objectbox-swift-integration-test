# https://circleci.com/docs/configuration-reference/
version: 2.1

# Swift versions used in ObjectBox releases (get with 'xcrun swift -version'):
# 4.1.0: 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2), Xcode 16.0
# 4.0.1: 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1), Xcode 15.0.1
# 4.0.0: 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1), Xcode 15.0.1
# 2.0.0: 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1), Xcode 15.0.1
# 1.9.2: 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1), Xcode 15.0.1
# 1.9.1: 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1), Xcode 15.0.1
# 1.9.0: 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100), Xcode 14.3.1
# 1.8.1: 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51), Xcode 14.2
# 1.8.0: 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51), Xcode 14.1
# 1.7.0: 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30), Xcode 13.2.1
# 1.6.0: 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55), Xcode 12.5
# 1.5.0: 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
# 1.4.1: 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1), Xcode 12.0
# 1.4.0: 5.2.4, Xcode 11.4(?)

jobs:

  # Test CocoaPods releases
  # See docs/release-checklist.md in the objectbox-swift repo on how to create a staging release.
  test-cocoapods:
    parameters:
      xcode-version:
        type: string
    macos: {xcode: << parameters.xcode-version >> }
    resource_class: macos.m1.medium.gen1 # https://circleci.com/docs/2.0/executor-types/#using-macos
    steps:
      - run:
          # TODO we should likely also have a matrix to test a couple of different iOS versions
          name: Prepare iOS simulator # Boot as early as possible to avoid test timeout.
          command: |
            OBX_DEVICE_ID=$(xcrun simctl create "iPhone 11" "iPhone 11")
            xcrun simctl boot $OBX_DEVICE_ID
      - run:
          name: Update CocoaPods
          command: sudo gem install cocoapods
      - checkout
       - run:
           name: Test CocoaPods latest
           command: ./test.sh --clean
       - run:
           name: Test CocoaPods latest explicit
           command: ./test.sh --clean -v "4.3.0"
#      - run:
#          name: Test CocoaPods staging release
#          command: ./test.sh --clean --version "4.3.0-rc3" --staging
      # - run:
      #     name: Test CocoaPods latest rc
      #     command: ./test.sh --clean -v "1.8.1-rc"
       - run:
           name: Test CocoaPods latest sync
           command: ./test.sh --clean -v "4.3.0-sync"
       - run:
           name: Test CocoaPods 2nd latest
           command: ./test.sh --clean -v "4.2.0"
#      - run:
#          name: Test CocoaPods 2nd latest sync version
#          command: ./test.sh --clean -v "1.5.0-sync"
      - run:
          command: |
            mkdir -p /tmp/test-results
            find . -name *.xcresult -exec cp -r {} /tmp/test-results \;
          when: on_fail
      - store_artifacts:
          path: /tmp/test-results
      - store_artifacts:
          path: ~/Library/Logs/DiagnosticReports
          destination: simulator-crash-reports

  # Test Carthage releases
  # Only works if runner has matching Swift version
#  test-carthage:
#    parameters:
#      xcode-version:
#        type: string
#    macos: {xcode: << parameters.xcode-version >> }
#    resource_class: macos.m1.medium.gen1 # https://circleci.com/docs/2.0/executor-types/#using-macos
#    steps:
#      - run:
#          name: Update Carthage
#          command: brew update && brew upgrade carthage
#      - run:
#          # TODO we should likely also have a matrix to test a couple of different iOS versions
#          name: Setup "iPhone 11" simulator
#          command: xcrun simctl create "iPhone 11" "iPhone 11"
#      - checkout
##      - run:
##          name: Test Carthage latest
##          command: ./test.sh --clean --carthage
#      - run:
#          name: Test Carthage latest explicit version
#          # Can not test 1.9.1/1.9.2/2.0.0/4.0.0/4.0.1 as required Xcode 15.0 image has simulator timeout issues. Can test once using Xcode 15.1+.
#          command: ./test.sh --clean --carthage -v 1.9.0
#      - run:
#          command: |
#            mkdir -p /tmp/test-results
#            find . -name *.xcresult -exec cp -r {} /tmp/test-results \;
#          when: on_fail
#      - store_artifacts:
#          path: /tmp/test-results
#
## To test release candidates via staging repo:
## https://github.com/objectbox/objectbox-swift-spec-staging/blob/master/cartspec/ObjectBox.json
#  test-carthage-staging:
#    parameters:
#      xcode-version:
#        type: string
#    macos: {xcode: << parameters.xcode-version >> }
#    resource_class: macos.m1.medium.gen1 # https://circleci.com/docs/using-macos/#available-resource-classes
#    steps:
#      - run:
#          name: Update Carthage
#          command: brew update && brew upgrade carthage
#      - run:
#          # TODO we should likely also have a matrix to test a couple of different iOS versions
#          name: Setup "iPhone 11" simulator
#          command: xcrun simctl create "iPhone 11" "iPhone 11"
#      - checkout
#      - run:
#          name: Test Carthage staging version
#          # Can not test 1.9.1/1.9.2/2.0.0/4.0.0/4.0.1 as required Xcode 15.0 image has simulator timeout issues. Can test once using Xcode 15.1+.
#          command: ./test.sh --staging --carthage -v 1.9.0-rc
##          command: ./test.sh --clean --framework https://github.com/objectbox/objectbox-swift-spec-staging/releases/download/v1.x/ObjectBox-xcframework-1.8.0.zip
#      - run:
#          command: |
#            mkdir -p /tmp/test-results
#            find . -name *.xcresult -exec cp -r {} /tmp/test-results \;
#          when: on_fail
#      - store_artifacts:
#          path: /tmp/test-results

workflows:
  cocoapods-workflow:
    jobs:
      # For available Xcode images see https://circleci.com/docs/testing-ios/#supported-xcode-versions
      - test-cocoapods:
          matrix:
            parameters:
              # Excluded 14.3.1 because of ruby/cocoapods trouble
              # ("uninitialized constant ActiveSupport::LoggerThreadSafeLevel::Logger")
              # 15.1.0 to test with Swift 5.9 (note: the 15.0.0 image fails due to severe simulator performance regressions)
              # 15.4.0 to test with Swift 5.10 (macOS 14.3.1)
              # 16.0.0 to test with Swift 6.0 (macOS 14.6.1)
              # 16.1.0 to test with Swift 6.0.2 (macOS 14.6.1)
              # 16.2.0 to test with Swift 6.0.3 (macOS 14.6.1)
              xcode-version: ["15.1.0", "15.4.0", "16.0.0", "16.1.0", "16.2.0"]

#      - test-carthage:
#          matrix:
#            parameters:
#              # ObjectBox framework Swift version must (still) match Xcode's exactly
#              xcode-version: ["14.3.1"]
#
#      - test-carthage-staging:
#          matrix:
#            parameters:
#              # ObjectBox framework Swift version must (still) match Xcode's exactly
#              # Can not test 1.9.1-rc1 as no working Xcode image to test is available (15.0 has simulator timeout issues).
#              xcode-version: ["14.3.1"]
